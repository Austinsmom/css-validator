/* CssParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;
import java.net.URL;
import java.math.BigDecimal;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssOperator;
import org.w3c.css.values.CssCheckableValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssAttr;
import org.w3c.css.values.CssCalc;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssHashIdent;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssImage;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssSwitch;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.values.CssRatio;
import org.w3c.css.values.CssSemitone;
import org.w3c.css.values.CssTypes;
import org.w3c.css.values.CssVolume;
import org.w3c.css.properties.css.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssErrorToken;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.media.AtRuleMedia;
import org.w3c.css.media.MediaFeature;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRuleKeyframes;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.ApplContext;
import org.w3c.css.util.CssProfile;
import org.w3c.css.util.CssVersion;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.WarningParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.selectors.AdjacentSiblingSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.GeneralSiblingSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

/** Token Manager. */
@SuppressWarnings("unused")public class CssParserTokenManager implements CssParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x0L);
      case 37:
         jjmatchedKind = 104;
         return jjMoveNfa_0(7, 0);
      case 40:
         jjmatchedKind = 52;
         return jjMoveNfa_0(7, 0);
      case 41:
         jjmatchedKind = 51;
         return jjMoveNfa_0(7, 0);
      case 42:
         jjmatchedKind = 49;
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 45:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 46:
         jjmatchedKind = 50;
         return jjMoveNfa_0(7, 0);
      case 47:
         jjmatchedKind = 46;
         return jjMoveNfa_0(7, 0);
      case 58:
         jjmatchedKind = 53;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x200000010L);
      case 59:
         jjmatchedKind = 45;
         return jjMoveNfa_0(7, 0);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x400000L, 0x0L);
      case 61:
         jjmatchedKind = 44;
         return jjMoveNfa_0(7, 0);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0xfffe0L);
      case 91:
         jjmatchedKind = 47;
         return jjMoveNfa_0(7, 0);
      case 93:
         jjmatchedKind = 48;
         return jjMoveNfa_0(7, 0);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x800000000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000000L);
      case 124:
         jjmatchedKind = 103;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 125:
         jjmatchedKind = 40;
         return jjMoveNfa_0(7, 0);
      default :
         return jjMoveNfa_0(7, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 0);
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000L, active1, 0L);
      case 58:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 1;
         }
         break;
      case 61:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x40000000000L) != 0L)
         {
            jjmatchedKind = 42;
            jjmatchedPos = 1;
         }
         else if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 43;
            jjmatchedPos = 1;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x500000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x42020L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);
      case 75:
      case 107:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0x200000080L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x81200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800004000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 1);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000L, active1, 0L);
      case 62:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 2;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x280L);
      case 68:
      case 100:
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 32;
            jjmatchedPos = 2;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20900L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80020L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x400000000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200056400L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 2);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 2);
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x400000L) != 0L)
         {
            jjmatchedKind = 22;
            jjmatchedPos = 3;
         }
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400000000L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100008200L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x80000L);
      case 80:
      case 112:
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 78;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200010000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000L);
      case 89:
      case 121:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 3);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 3);
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 96;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 97;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 98;
            jjmatchedPos = 4;
         }
         else if ((active1 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 99;
            jjmatchedPos = 4;
         }
         break;
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
         {
            jjmatchedKind = 73;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x80L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x1800L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x8000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0xc0000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x2040L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x20L);
      case 84:
      case 116:
         if ((active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 4;
         }
         return jjMoveStringLiteralDfa5_0(active1, 0x10400L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 4);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 4);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x400L);
      case 65:
      case 97:
         if ((active1 & 0x100L) != 0L)
         {
            jjmatchedKind = 72;
            jjmatchedPos = 5;
         }
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x81000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x10000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x2840L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0xa0L);
      case 84:
      case 116:
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 79;
            jjmatchedPos = 5;
         }
         return jjMoveStringLiteralDfa6_0(active1, 0x40000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 5);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 5);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 5);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x2000L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa7_0(active1, 0x800L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x40020L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x400L);
      case 77:
      case 109:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 6;
         }
         break;
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active1, 0x80L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x1000L);
      case 84:
      case 116:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 6);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 6);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 6);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x480L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x80000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active1, 0x800L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x2000L);
      case 82:
      case 114:
         if ((active1 & 0x40000L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 7;
         }
         break;
      case 84:
      case 116:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 7;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 7);
}
private int jjMoveStringLiteralDfa8_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 7);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 7);
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x80480L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa9_0(active1, 0x800L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x1000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x2000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 8);
}
private int jjMoveStringLiteralDfa9_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 8);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 8);
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x80000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x1000L);
      case 69:
      case 101:
         if ((active1 & 0x80L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 9;
         }
         else if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 9;
         }
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x2000L);
      case 83:
      case 115:
         if ((active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 75;
            jjmatchedPos = 9;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 9);
}
private int jjMoveStringLiteralDfa10_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 9);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 9);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x80000L);
      case 69:
      case 101:
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 76;
            jjmatchedPos = 10;
         }
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x2000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 10);
}
private int jjMoveStringLiteralDfa11_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 10);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 10);
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x2000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 11);
}
private int jjMoveStringLiteralDfa12_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 11);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 11);
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x2000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 12);
}
private int jjMoveStringLiteralDfa13_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 12);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 12);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x2000L) != 0L)
         {
            jjmatchedKind = 77;
            jjmatchedPos = 13;
         }
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 13);
}
private int jjMoveStringLiteralDfa14_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 13);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 13);
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 14);
}
private int jjMoveStringLiteralDfa15_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 14);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 14);
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 15);
}
private int jjMoveStringLiteralDfa16_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 15);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 15);
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x80000L);
      default :
         break;
   }
   return jjMoveNfa_0(7, 16);
}
private int jjMoveStringLiteralDfa17_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjMoveNfa_0(7, 16);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
   return jjMoveNfa_0(7, 16);
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 83;
            jjmatchedPos = 17;
         }
         break;
      default :
         break;
   }
   return jjMoveNfa_0(7, 17);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int strKind = jjmatchedKind;
   int strPos = jjmatchedPos;
   int seenUpto;
   input_stream.backup(seenUpto = curPos + 1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { throw new Error("Internal Error"); }
   curPos = 0;
   int startsAt = 0;
   jjnewStateCnt = 783;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                     { jjCheckNAddStates(0, 100); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 21)
                        kind = 21;
                     { jjCheckNAddStates(101, 120); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAddStates(121, 147); }
                  else if (curChar == 35)
                     { jjCheckNAddStates(148, 152); }
                  else if (curChar == 45)
                     { jjAddStates(153, 156); }
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(157, 161); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     { jjCheckNAddStates(162, 166); }
                  }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 211;
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(34, 51); }
                  else if (curChar == 44)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 60)
                     { jjCheckNAddStates(167, 171); }
                  else if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 0:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 1:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 42)
                     { jjCheckNAddStates(172, 174); }
                  break;
               case 3:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 42)
                     { jjCheckNAddStates(175, 177); }
                  break;
               case 6:
                  if (curChar == 47 && kind > 1)
                     kind = 1;
                  break;
               case 9:
                  if (curChar == 43 && kind > 27)
                     kind = 27;
                  break;
               case 10:
                  if (curChar == 62 && kind > 29)
                     kind = 29;
                  break;
               case 11:
                  if (curChar == 44 && kind > 30)
                     kind = 30;
                  break;
               case 19:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 20:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 22:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(178, 182); }
                  break;
               case 24:
                  if (curChar != 10)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 25:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(183, 190); }
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(191, 194); }
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(195, 199); }
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(200, 205); }
                  break;
               case 31:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(206, 212); }
                  break;
               case 32:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 33:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(34, 51); }
                  break;
               case 34:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(213, 215); }
                  break;
               case 35:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(36, 37); }
                  break;
               case 36:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(36, 37); }
                  break;
               case 37:
                  if (curChar == 42)
                     { jjCheckNAddStates(216, 218); }
                  break;
               case 38:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(39, 40); }
                  break;
               case 39:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(39, 40); }
                  break;
               case 40:
                  if (curChar == 42)
                     { jjCheckNAddStates(219, 221); }
                  break;
               case 41:
                  if (curChar == 47)
                     { jjCheckNAddStates(213, 215); }
                  break;
               case 42:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 53:
                  if (curChar == 45)
                     { jjAddStates(222, 223); }
                  break;
               case 55:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 57:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(224, 228); }
                  break;
               case 59:
                  if (curChar != 10)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 60:
               case 69:
                  if (curChar == 13)
                     { jjCheckNAdd(59); }
                  break;
               case 61:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(229, 236); }
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(237, 240); }
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(241, 245); }
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(246, 251); }
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(252, 258); }
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(259, 263); }
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(264, 271); }
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(272, 275); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(276, 280); }
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(281, 286); }
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(287, 293); }
                  break;
               case 75:
                  if (curChar == 60)
                     { jjCheckNAddStates(167, 171); }
                  break;
               case 77:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(294, 298); }
                  break;
               case 78:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(79, 80); }
                  break;
               case 79:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(79, 80); }
                  break;
               case 80:
                  if (curChar == 42)
                     { jjCheckNAddStates(299, 301); }
                  break;
               case 81:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 82:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 83:
                  if (curChar == 42)
                     { jjCheckNAddStates(302, 304); }
                  break;
               case 84:
                  if (curChar == 47)
                     { jjCheckNAddStates(294, 298); }
                  break;
               case 85:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 86:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(87, 196); }
                  break;
               case 88:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 89:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 90:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 91:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(91, 92); }
                  break;
               case 92:
                  if (curChar == 42)
                     { jjCheckNAddStates(317, 319); }
                  break;
               case 93:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(94, 95); }
                  break;
               case 94:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(94, 95); }
                  break;
               case 95:
                  if (curChar == 42)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 96:
                  if (curChar == 47)
                     { jjCheckNAddStates(311, 316); }
                  break;
               case 97:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 98:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(99, 115); }
                  break;
               case 100:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 101:
                  if (curChar == 61)
                     { jjCheckNAddStates(326, 330); }
                  break;
               case 102:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(103, 145); }
                  break;
               case 104:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 105:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(337, 342); }
                  break;
               case 106:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(107, 108); }
                  break;
               case 107:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(107, 108); }
                  break;
               case 108:
                  if (curChar == 42)
                     { jjCheckNAddStates(343, 345); }
                  break;
               case 109:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 110:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 111:
                  if (curChar == 42)
                     { jjCheckNAddStates(346, 348); }
                  break;
               case 112:
                  if (curChar == 47)
                     { jjCheckNAddStates(337, 342); }
                  break;
               case 113:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 114:
                  if (curChar == 62 && kind > 101)
                     kind = 101;
                  break;
               case 116:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(349, 354); }
                  break;
               case 119:
                  if (curChar == 10)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 120:
               case 128:
                  if (curChar == 13)
                     { jjCheckNAdd(119); }
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(355, 363); }
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(364, 368); }
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(369, 374); }
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(375, 381); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(382, 389); }
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(390, 395); }
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(396, 404); }
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(405, 409); }
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(410, 415); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(416, 422); }
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(423, 430); }
                  break;
               case 135:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(431, 438); }
                  break;
               case 137:
                  if (curChar == 10)
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 138:
               case 147:
                  if (curChar == 13)
                     { jjCheckNAdd(137); }
                  break;
               case 139:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(439, 447); }
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(448, 458); }
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(459, 465); }
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(466, 473); }
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(474, 482); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(483, 492); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(493, 500); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(501, 511); }
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(512, 518); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(519, 526); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(527, 535); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(536, 545); }
                  break;
               case 153:
                  if (curChar == 34)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 154:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 155:
                  if (curChar == 34)
                     { jjCheckNAddStates(549, 553); }
                  break;
               case 157:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 158:
                  if (curChar == 10)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 159:
               case 162:
                  if (curChar == 13)
                     { jjCheckNAdd(158); }
                  break;
               case 160:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(554, 559); }
                  break;
               case 163:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(560, 568); }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(569, 573); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(574, 579); }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(580, 586); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(587, 594); }
                  break;
               case 169:
                  if (curChar == 39)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 170:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 171:
                  if (curChar == 39)
                     { jjCheckNAddStates(549, 553); }
                  break;
               case 173:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 174:
                  if (curChar == 10)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 175:
               case 178:
                  if (curChar == 13)
                     { jjCheckNAdd(174); }
                  break;
               case 176:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 179:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(604, 612); }
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(613, 617); }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(618, 623); }
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(624, 630); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(631, 638); }
                  break;
               case 186:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(639, 646); }
                  break;
               case 188:
                  if (curChar == 10)
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 189:
               case 198:
                  if (curChar == 13)
                     { jjCheckNAdd(188); }
                  break;
               case 190:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(647, 655); }
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(656, 666); }
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(667, 673); }
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(674, 681); }
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(682, 690); }
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(691, 700); }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(701, 708); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(709, 719); }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(720, 726); }
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(727, 734); }
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(735, 743); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(744, 753); }
                  break;
               case 210:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 47)
                     { jjCheckNAddStates(754, 757); }
                  break;
               case 212:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 213:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(214, 215); }
                  break;
               case 214:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(214, 215); }
                  break;
               case 215:
                  if (curChar == 42)
                     { jjCheckNAddStates(763, 765); }
                  break;
               case 216:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(217, 218); }
                  break;
               case 217:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(217, 218); }
                  break;
               case 218:
                  if (curChar == 42)
                     { jjCheckNAddStates(766, 768); }
                  break;
               case 219:
                  if (curChar == 47)
                     { jjCheckNAddStates(758, 762); }
                  break;
               case 220:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 221:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(222, 245); }
                  break;
               case 223:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 224:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(773, 775); }
                  break;
               case 225:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 226:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(226, 227); }
                  break;
               case 227:
                  if (curChar == 42)
                     { jjCheckNAddStates(776, 778); }
                  break;
               case 228:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 229:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 230:
                  if (curChar == 42)
                     { jjCheckNAddStates(779, 781); }
                  break;
               case 231:
                  if (curChar == 47)
                     { jjCheckNAddStates(773, 775); }
                  break;
               case 232:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 233:
                  if (curChar == 62 && kind > 102)
                     kind = 102;
                  break;
               case 235:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(782, 787); }
                  break;
               case 237:
                  if (curChar == 10)
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 238:
               case 247:
                  if (curChar == 13)
                     { jjCheckNAdd(237); }
                  break;
               case 239:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(788, 793); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(794, 802); }
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(803, 807); }
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(808, 813); }
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(814, 820); }
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(821, 828); }
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(829, 834); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(835, 843); }
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(844, 848); }
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(849, 854); }
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(855, 861); }
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(862, 869); }
                  break;
               case 253:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 254:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddStates(101, 120); }
                  break;
               case 255:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(256, 257); }
                  break;
               case 256:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(256, 257); }
                  break;
               case 257:
                  if (curChar == 42)
                     { jjCheckNAddStates(870, 872); }
                  break;
               case 258:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 259:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 260:
                  if (curChar == 42)
                     { jjCheckNAddStates(873, 875); }
                  break;
               case 261:
                  if (curChar != 47)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 262:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 263:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 21)
                     kind = 21;
                  { jjCheckNAddTwoStates(262, 263); }
                  break;
               case 264:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(265, 266); }
                  break;
               case 265:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(265, 266); }
                  break;
               case 266:
                  if (curChar == 42)
                     { jjCheckNAddStates(876, 878); }
                  break;
               case 267:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 268:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 269:
                  if (curChar == 42)
                     { jjCheckNAddStates(879, 881); }
                  break;
               case 270:
                  if (curChar == 47)
                     { jjCheckNAddStates(882, 884); }
                  break;
               case 271:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 272:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(882, 884); }
                  break;
               case 274:
                  if (curChar == 61 && kind > 24)
                     kind = 24;
                  break;
               case 275:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(276, 277); }
                  break;
               case 276:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(276, 277); }
                  break;
               case 277:
                  if (curChar == 42)
                     { jjCheckNAddStates(885, 887); }
                  break;
               case 278:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 279:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 280:
                  if (curChar == 42)
                     { jjCheckNAddStates(888, 890); }
                  break;
               case 281:
                  if (curChar == 47)
                     { jjCheckNAddStates(891, 893); }
                  break;
               case 282:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 283:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(891, 893); }
                  break;
               case 284:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 285:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(285, 286); }
                  break;
               case 286:
                  if (curChar == 42)
                     { jjCheckNAddStates(894, 896); }
                  break;
               case 287:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 288:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 289:
                  if (curChar == 42)
                     { jjCheckNAddStates(897, 899); }
                  break;
               case 290:
                  if (curChar == 47)
                     { jjCheckNAddStates(900, 902); }
                  break;
               case 291:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 292:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(900, 902); }
                  break;
               case 293:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(294, 295); }
                  break;
               case 294:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(294, 295); }
                  break;
               case 295:
                  if (curChar == 42)
                     { jjCheckNAddStates(903, 905); }
                  break;
               case 296:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 297:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 298:
                  if (curChar == 42)
                     { jjCheckNAddStates(906, 908); }
                  break;
               case 299:
                  if (curChar == 47)
                     { jjCheckNAddStates(909, 911); }
                  break;
               case 300:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 301:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(909, 911); }
                  break;
               case 302:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 303:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(303, 304); }
                  break;
               case 304:
                  if (curChar == 42)
                     { jjCheckNAddStates(912, 914); }
                  break;
               case 305:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 306:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 307:
                  if (curChar == 42)
                     { jjCheckNAddStates(915, 917); }
                  break;
               case 308:
                  if (curChar == 47)
                     { jjCheckNAddStates(918, 920); }
                  break;
               case 309:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 310:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(918, 920); }
                  break;
               case 311:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 312:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(312, 313); }
                  break;
               case 313:
                  if (curChar == 42)
                     { jjCheckNAddStates(921, 923); }
                  break;
               case 314:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 315:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 316:
                  if (curChar == 42)
                     { jjCheckNAddStates(924, 926); }
                  break;
               case 317:
                  if (curChar == 47)
                     { jjCheckNAddStates(927, 929); }
                  break;
               case 318:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 319:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(927, 929); }
                  break;
               case 322:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(162, 166); }
                  break;
               case 323:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 324:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 326:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 327:
                  if (curChar == 10)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 328:
               case 331:
                  if (curChar == 13)
                     { jjCheckNAdd(327); }
                  break;
               case 329:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(933, 938); }
                  break;
               case 332:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(939, 947); }
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(948, 952); }
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(953, 958); }
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(959, 965); }
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(966, 973); }
                  break;
               case 338:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 340:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 341:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 342:
               case 345:
                  if (curChar == 13)
                     { jjCheckNAdd(341); }
                  break;
               case 343:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(974, 978); }
                  break;
               case 346:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(979, 986); }
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(987, 990); }
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(991, 995); }
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(996, 1001); }
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1002, 1008); }
                  break;
               case 352:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(157, 161); }
                  break;
               case 353:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 354:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 356:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 357:
                  if (curChar == 10)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 358:
               case 361:
                  if (curChar == 13)
                     { jjCheckNAdd(357); }
                  break;
               case 359:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1012, 1017); }
                  break;
               case 362:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 363:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1018, 1026); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1027, 1031); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1032, 1037); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1038, 1044); }
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1045, 1052); }
                  break;
               case 368:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 370:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 371:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 372:
               case 375:
                  if (curChar == 13)
                     { jjCheckNAdd(371); }
                  break;
               case 373:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1053, 1057); }
                  break;
               case 376:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1058, 1065); }
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1066, 1069); }
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1070, 1074); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1075, 1080); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1081, 1087); }
                  break;
               case 382:
                  if (curChar == 45)
                     { jjAddStates(153, 156); }
                  break;
               case 384:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 386:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1088, 1092); }
                  break;
               case 388:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 389:
               case 420:
                  if (curChar == 13)
                     { jjCheckNAdd(388); }
                  break;
               case 390:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1093, 1100); }
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1101, 1104); }
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1105, 1109); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1110, 1115); }
                  break;
               case 395:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1116, 1122); }
                  break;
               case 397:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 398:
                  if (curChar == 40 && kind > 100)
                     kind = 100;
                  break;
               case 400:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1126, 1131); }
                  break;
               case 402:
                  if (curChar == 10)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 403:
               case 412:
                  if (curChar == 13)
                     { jjCheckNAdd(402); }
                  break;
               case 404:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1132, 1140); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1141, 1145); }
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1146, 1151); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1152, 1158); }
                  break;
               case 409:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1159, 1166); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1167, 1172); }
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1173, 1181); }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1182, 1186); }
                  break;
               case 415:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1187, 1192); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1193, 1199); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1200, 1207); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1208, 1212); }
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1213, 1220); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1221, 1224); }
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1225, 1229); }
                  break;
               case 424:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1230, 1235); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1236, 1242); }
                  break;
               case 427:
                  if (curChar == 35)
                     { jjCheckNAddStates(148, 152); }
                  break;
               case 428:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(429, 442); }
                  break;
               case 430:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 432:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 433:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1247); }
                  break;
               case 434:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 435:
               case 444:
                  if (curChar == 13)
                     { jjCheckNAdd(434); }
                  break;
               case 436:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1248, 1255); }
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1256, 1259); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1260, 1264); }
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1265, 1270); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1271, 1277); }
                  break;
               case 443:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1278, 1282); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1283, 1290); }
                  break;
               case 446:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1291, 1294); }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1295, 1299); }
                  break;
               case 448:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1300, 1305); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1306, 1312); }
                  break;
               case 450:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 452:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 453:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1313, 1317); }
                  break;
               case 454:
                  if (curChar != 10)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 455:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1318, 1325); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1326, 1329); }
                  break;
               case 459:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1330, 1334); }
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1335, 1340); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1341, 1347); }
                  break;
               case 463:
                  if (curChar == 40)
                     { jjCheckNAddStates(1348, 1353); }
                  break;
               case 464:
                  if (curChar == 34)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 465:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 466:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(467, 476); }
                  break;
               case 467:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1357, 1359); }
                  break;
               case 468:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(469, 470); }
                  break;
               case 469:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(469, 470); }
                  break;
               case 470:
                  if (curChar == 42)
                     { jjCheckNAddStates(1360, 1362); }
                  break;
               case 471:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 472:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 473:
                  if (curChar == 42)
                     { jjCheckNAddStates(1363, 1365); }
                  break;
               case 474:
                  if (curChar == 47)
                     { jjCheckNAddStates(1357, 1359); }
                  break;
               case 475:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 476:
                  if (curChar == 41 && kind > 54)
                     kind = 54;
                  break;
               case 478:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 479:
                  if (curChar == 10)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 480:
               case 483:
                  if (curChar == 13)
                     { jjCheckNAdd(479); }
                  break;
               case 481:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1366, 1371); }
                  break;
               case 484:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1372, 1380); }
                  break;
               case 486:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1381, 1385); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1386, 1391); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1392, 1398); }
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1399, 1406); }
                  break;
               case 490:
                  if (curChar == 39)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 491:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 492:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(467, 476); }
                  break;
               case 494:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 495:
                  if (curChar == 10)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 496:
               case 499:
                  if (curChar == 13)
                     { jjCheckNAdd(495); }
                  break;
               case 497:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1410, 1415); }
                  break;
               case 500:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1416, 1424); }
                  break;
               case 502:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1425, 1429); }
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1430, 1435); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1436, 1442); }
                  break;
               case 505:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1443, 1450); }
                  break;
               case 506:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 508:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1455, 1460); }
                  break;
               case 510:
                  if (curChar == 10)
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 511:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 512:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1461, 1466); }
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1467, 1475); }
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1476, 1480); }
                  break;
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1481, 1486); }
                  break;
               case 516:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1487, 1493); }
                  break;
               case 517:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1494, 1501); }
                  break;
               case 518:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1502, 1510); }
                  break;
               case 519:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(520, 521); }
                  break;
               case 520:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(520, 521); }
                  break;
               case 521:
                  if (curChar == 42)
                     { jjCheckNAddStates(1511, 1513); }
                  break;
               case 522:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(523, 524); }
                  break;
               case 523:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     { jjCheckNAddTwoStates(523, 524); }
                  break;
               case 524:
                  if (curChar == 42)
                     { jjCheckNAddStates(1514, 1516); }
                  break;
               case 525:
                  if (curChar == 47)
                     { jjCheckNAddStates(1517, 1523); }
                  break;
               case 526:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 529:
                  if (curChar == 43)
                     { jjAddStates(1524, 1525); }
                  break;
               case 530:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 531;
                  break;
               case 531:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1526, 1529); }
                  break;
               case 532:
                  if (curChar == 63 && kind > 94)
                     kind = 94;
                  break;
               case 533:
               case 549:
               case 553:
               case 556:
               case 559:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAdd(532); }
                  break;
               case 534:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(532, 533); }
                  break;
               case 535:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1530, 1532); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjAddStates(1533, 1538); }
                  break;
               case 537:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 538:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(541); }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAdd(532); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 550:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(532, 553); }
                  break;
               case 554:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 555:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1539, 1541); }
                  break;
               case 557:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(532, 556); }
                  break;
               case 558:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1542, 1545); }
                  break;
               case 560:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(532, 559); }
                  break;
               case 561:
                  if (curChar != 63)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1546, 1548); }
                  break;
               case 562:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(564, 570); }
                  break;
               case 564:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1549, 1552); }
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAdd(541); }
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(541, 567); }
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1553, 1555); }
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1556, 1560); }
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 572:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(571, 564); }
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1564, 1567); }
                  break;
               case 575:
                  if (curChar == 46)
                     { jjCheckNAddStates(121, 147); }
                  break;
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(576, 578); }
                  break;
               case 579:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(579, 581); }
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(582, 584); }
                  break;
               case 585:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(585, 587); }
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(588, 590); }
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(591, 593); }
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(594, 598); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(599, 603); }
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(604, 606); }
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(607, 608); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(609, 610); }
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(611, 613); }
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(614, 616); }
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(617, 619); }
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(620, 622); }
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1568, 1572); }
                  break;
               case 637:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(637, 639); }
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(640, 642); }
                  break;
               case 643:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1573, 1575); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1576, 1578); }
                  break;
               case 652:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(652, 653); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1579, 1581); }
                  break;
               case 664:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 666:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 667:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1582, 1586); }
                  break;
               case 668:
                  if (curChar != 10)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 669:
               case 678:
                  if (curChar == 13)
                     { jjCheckNAdd(668); }
                  break;
               case 670:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1587, 1594); }
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1595, 1598); }
                  break;
               case 673:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1599, 1603); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1604, 1609); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1610, 1616); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1617, 1621); }
                  break;
               case 679:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1622, 1629); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1630, 1633); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1634, 1638); }
                  break;
               case 682:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1639, 1644); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1645, 1651); }
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(684, 685); }
                  break;
               case 685:
                  if (curChar == 37 && kind > 65)
                     kind = 65;
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(686); }
                  break;
               case 687:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(688, 701); }
                  break;
               case 689:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 691:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 692:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1652, 1656); }
                  break;
               case 693:
                  if (curChar != 10)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 694:
               case 703:
                  if (curChar == 13)
                     { jjCheckNAdd(693); }
                  break;
               case 695:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 696:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1657, 1664); }
                  break;
               case 697:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1665, 1668); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1669, 1673); }
                  break;
               case 699:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1674, 1679); }
                  break;
               case 700:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1680, 1686); }
                  break;
               case 702:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1687, 1691); }
                  break;
               case 704:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1692, 1699); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1700, 1703); }
                  break;
               case 706:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1704, 1708); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1709, 1714); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1715, 1721); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(0, 100); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(711, 578); }
                  break;
               case 712:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(712, 713); }
                  break;
               case 713:
                  if (curChar == 46)
                     { jjCheckNAdd(576); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(714, 581); }
                  break;
               case 715:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(715, 716); }
                  break;
               case 716:
                  if (curChar == 46)
                     { jjCheckNAdd(579); }
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(717, 584); }
                  break;
               case 718:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(718, 719); }
                  break;
               case 719:
                  if (curChar == 46)
                     { jjCheckNAdd(582); }
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(720, 587); }
                  break;
               case 721:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(721, 722); }
                  break;
               case 722:
                  if (curChar == 46)
                     { jjCheckNAdd(585); }
                  break;
               case 723:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(723, 590); }
                  break;
               case 724:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(724, 725); }
                  break;
               case 725:
                  if (curChar == 46)
                     { jjCheckNAdd(588); }
                  break;
               case 726:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(726, 593); }
                  break;
               case 727:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(727, 728); }
                  break;
               case 728:
                  if (curChar == 46)
                     { jjCheckNAdd(591); }
                  break;
               case 729:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(729, 598); }
                  break;
               case 730:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(730, 731); }
                  break;
               case 731:
                  if (curChar == 46)
                     { jjCheckNAdd(594); }
                  break;
               case 732:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(732, 603); }
                  break;
               case 733:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(733, 734); }
                  break;
               case 734:
                  if (curChar == 46)
                     { jjCheckNAdd(599); }
                  break;
               case 735:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(735, 606); }
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(736, 737); }
                  break;
               case 737:
                  if (curChar == 46)
                     { jjCheckNAdd(604); }
                  break;
               case 738:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(738, 608); }
                  break;
               case 739:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(739, 740); }
                  break;
               case 740:
                  if (curChar == 46)
                     { jjCheckNAdd(607); }
                  break;
               case 741:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(741, 610); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(742, 743); }
                  break;
               case 743:
                  if (curChar == 46)
                     { jjCheckNAdd(609); }
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(744, 613); }
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(745, 746); }
                  break;
               case 746:
                  if (curChar == 46)
                     { jjCheckNAdd(611); }
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(747, 616); }
                  break;
               case 748:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(748, 749); }
                  break;
               case 749:
                  if (curChar == 46)
                     { jjCheckNAdd(614); }
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(750, 619); }
                  break;
               case 751:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(751, 752); }
                  break;
               case 752:
                  if (curChar == 46)
                     { jjCheckNAdd(617); }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(753, 622); }
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(754, 755); }
                  break;
               case 755:
                  if (curChar == 46)
                     { jjCheckNAdd(620); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1722, 1726); }
                  break;
               case 757:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(757, 758); }
                  break;
               case 758:
                  if (curChar == 46)
                     { jjCheckNAdd(623); }
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(759, 639); }
                  break;
               case 760:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(760, 761); }
                  break;
               case 761:
                  if (curChar == 46)
                     { jjCheckNAdd(637); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(762, 642); }
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(763, 764); }
                  break;
               case 764:
                  if (curChar == 46)
                     { jjCheckNAdd(640); }
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1727, 1729); }
                  break;
               case 766:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(766, 767); }
                  break;
               case 767:
                  if (curChar == 46)
                     { jjCheckNAdd(643); }
                  break;
               case 768:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1730, 1732); }
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(769, 770); }
                  break;
               case 770:
                  if (curChar == 46)
                     { jjCheckNAdd(647); }
                  break;
               case 771:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(771, 653); }
                  break;
               case 772:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(772, 773); }
                  break;
               case 773:
                  if (curChar == 46)
                     { jjCheckNAdd(652); }
                  break;
               case 774:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1733, 1735); }
                  break;
               case 775:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(775, 776); }
                  break;
               case 776:
                  if (curChar == 46)
                     { jjCheckNAdd(662); }
                  break;
               case 777:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(777, 685); }
                  break;
               case 778:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(778, 779); }
                  break;
               case 779:
                  if (curChar == 46)
                     { jjCheckNAdd(684); }
                  break;
               case 780:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(780); }
                  break;
               case 781:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(781, 782); }
                  break;
               case 782:
                  if (curChar == 46)
                     { jjCheckNAdd(686); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     { jjCheckNAddStates(1736, 1740); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1741, 1744); }
                  else if (curChar == 126)
                  {
                     if (kind > 31)
                        kind = 31;
                     { jjCheckNAdd(274); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1745, 1747); }
                  else if (curChar == 123)
                  {
                     if (kind > 26)
                        kind = 26;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1748, 1750); }
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 1:
                  { jjAddStates(1751, 1752); }
                  break;
               case 3:
               case 4:
                  { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 8:
                  if (curChar == 123 && kind > 26)
                     kind = 26;
                  break;
               case 12:
                  if ((0x200000002000000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 13:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if ((0x10000000100000L & l) != 0L && kind > 33)
                     kind = 33;
                  break;
               case 17:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 20:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 21:
                  if (curChar == 92)
                     { jjAddStates(1753, 1754); }
                  break;
               case 22:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 23:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(178, 182); }
                  break;
               case 27:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(183, 190); }
                  break;
               case 28:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(191, 194); }
                  break;
               case 29:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(195, 199); }
                  break;
               case 30:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(200, 205); }
                  break;
               case 31:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddStates(206, 212); }
                  break;
               case 36:
                  { jjAddStates(1755, 1756); }
                  break;
               case 38:
               case 39:
                  { jjCheckNAddTwoStates(39, 40); }
                  break;
               case 43:
                  if ((0x10000000100000L & l) != 0L && kind > 67)
                     kind = 67;
                  break;
               case 44:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 64)
                     { jjAddStates(1745, 1747); }
                  break;
               case 54:
               case 55:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 56:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(57, 58); }
                  break;
               case 57:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(224, 228); }
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(229, 236); }
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(237, 240); }
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(241, 245); }
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(246, 251); }
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(252, 258); }
                  break;
               case 67:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(57, 68); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(259, 263); }
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(264, 271); }
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(272, 275); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(276, 280); }
                  break;
               case 73:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(281, 286); }
                  break;
               case 74:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddStates(287, 293); }
                  break;
               case 76:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(1757, 1760); }
                  break;
               case 79:
                  { jjAddStates(1761, 1762); }
                  break;
               case 81:
               case 82:
                  { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 87:
               case 88:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 91:
                  { jjAddStates(1763, 1764); }
                  break;
               case 93:
               case 94:
                  { jjCheckNAddTwoStates(94, 95); }
                  break;
               case 99:
               case 100:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 103:
               case 104:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 107:
                  { jjAddStates(1765, 1766); }
                  break;
               case 109:
               case 110:
                  { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 115:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(116, 127); }
                  break;
               case 116:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 117:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(116, 118); }
                  break;
               case 118:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(349, 354); }
                  break;
               case 122:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(355, 363); }
                  break;
               case 123:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(364, 368); }
                  break;
               case 124:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(369, 374); }
                  break;
               case 125:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(375, 381); }
                  break;
               case 126:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(382, 389); }
                  break;
               case 127:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(390, 395); }
                  break;
               case 129:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(396, 404); }
                  break;
               case 130:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(405, 409); }
                  break;
               case 131:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(410, 415); }
                  break;
               case 132:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(416, 422); }
                  break;
               case 133:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(423, 430); }
                  break;
               case 134:
                  if (curChar == 92)
                     { jjCheckNAddStates(1767, 1770); }
                  break;
               case 135:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 136:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(431, 438); }
                  break;
               case 140:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(448, 458); }
                  break;
               case 141:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(459, 465); }
                  break;
               case 142:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(466, 473); }
                  break;
               case 143:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(474, 482); }
                  break;
               case 144:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(483, 492); }
                  break;
               case 145:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(135, 146); }
                  break;
               case 146:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(493, 500); }
                  break;
               case 148:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(501, 511); }
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(512, 518); }
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(519, 526); }
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(527, 535); }
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(536, 545); }
                  break;
               case 154:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 156:
                  if (curChar == 92)
                     { jjAddStates(1771, 1774); }
                  break;
               case 160:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(554, 559); }
                  break;
               case 164:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(560, 568); }
                  break;
               case 165:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(569, 573); }
                  break;
               case 166:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(574, 579); }
                  break;
               case 167:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(580, 586); }
                  break;
               case 168:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(587, 594); }
                  break;
               case 170:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 172:
                  if (curChar == 92)
                     { jjAddStates(1775, 1778); }
                  break;
               case 176:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(598, 603); }
                  break;
               case 180:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(604, 612); }
                  break;
               case 181:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(613, 617); }
                  break;
               case 182:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(618, 623); }
                  break;
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(624, 630); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(631, 638); }
                  break;
               case 185:
                  if (curChar == 92)
                     { jjCheckNAddStates(1779, 1782); }
                  break;
               case 186:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 187:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(639, 646); }
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(656, 666); }
                  break;
               case 192:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(667, 673); }
                  break;
               case 193:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(674, 681); }
                  break;
               case 194:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(682, 690); }
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(691, 700); }
                  break;
               case 196:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(186, 197); }
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(701, 708); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(709, 719); }
                  break;
               case 200:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(720, 726); }
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(727, 734); }
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(735, 743); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(744, 753); }
                  break;
               case 204:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 205:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 214:
                  { jjAddStates(1783, 1784); }
                  break;
               case 216:
               case 217:
                  { jjCheckNAddTwoStates(217, 218); }
                  break;
               case 222:
               case 223:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 226:
                  { jjAddStates(1785, 1786); }
                  break;
               case 228:
               case 229:
                  { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 234:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(235, 236); }
                  break;
               case 235:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(782, 787); }
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(794, 802); }
                  break;
               case 241:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(803, 807); }
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(808, 813); }
                  break;
               case 243:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(814, 820); }
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(821, 828); }
                  break;
               case 245:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(235, 246); }
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(829, 834); }
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(835, 843); }
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(844, 848); }
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(849, 854); }
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(855, 861); }
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(862, 869); }
                  break;
               case 256:
                  { jjAddStates(1787, 1788); }
                  break;
               case 258:
               case 259:
                  { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 265:
                  { jjAddStates(1789, 1790); }
                  break;
               case 267:
               case 268:
                  { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 273:
                  if (curChar == 126)
                     { jjCheckNAdd(274); }
                  break;
               case 276:
                  { jjAddStates(1791, 1792); }
                  break;
               case 278:
               case 279:
                  { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 285:
                  { jjAddStates(1793, 1794); }
                  break;
               case 287:
               case 288:
                  { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 294:
                  { jjAddStates(1795, 1796); }
                  break;
               case 296:
               case 297:
                  { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 303:
                  { jjAddStates(1797, 1798); }
                  break;
               case 305:
               case 306:
                  { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 312:
                  { jjAddStates(1799, 1800); }
                  break;
               case 314:
               case 315:
                  { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 320:
                  if (curChar == 126 && kind > 31)
                     kind = 31;
                  break;
               case 321:
                  if (curChar != 126)
                     break;
                  if (kind > 31)
                     kind = 31;
                  { jjCheckNAdd(274); }
                  break;
               case 323:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 325:
                  if (curChar == 92)
                     { jjAddStates(1801, 1804); }
                  break;
               case 329:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(933, 938); }
                  break;
               case 333:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(939, 947); }
                  break;
               case 334:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(948, 952); }
                  break;
               case 335:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(953, 958); }
                  break;
               case 336:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(959, 965); }
                  break;
               case 337:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(966, 973); }
                  break;
               case 338:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 339:
                  if (curChar == 92)
                     { jjAddStates(1805, 1808); }
                  break;
               case 343:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 344:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(974, 978); }
                  break;
               case 347:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(979, 986); }
                  break;
               case 348:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(987, 990); }
                  break;
               case 349:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(991, 995); }
                  break;
               case 350:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(996, 1001); }
                  break;
               case 351:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1002, 1008); }
                  break;
               case 353:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 355:
                  if (curChar == 92)
                     { jjAddStates(1809, 1812); }
                  break;
               case 359:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1012, 1017); }
                  break;
               case 363:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1018, 1026); }
                  break;
               case 364:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1027, 1031); }
                  break;
               case 365:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1032, 1037); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1038, 1044); }
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1045, 1052); }
                  break;
               case 368:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 369:
                  if (curChar == 92)
                     { jjAddStates(1813, 1816); }
                  break;
               case 373:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1053, 1057); }
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1058, 1065); }
                  break;
               case 378:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1066, 1069); }
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1070, 1074); }
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1075, 1080); }
                  break;
               case 381:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddStates(1081, 1087); }
                  break;
               case 383:
               case 384:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 385:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(386, 387); }
                  break;
               case 386:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 387:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1088, 1092); }
                  break;
               case 391:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1093, 1100); }
                  break;
               case 392:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1101, 1104); }
                  break;
               case 393:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1105, 1109); }
                  break;
               case 394:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1110, 1115); }
                  break;
               case 395:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1116, 1122); }
                  break;
               case 396:
               case 397:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 399:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(400, 401); }
                  break;
               case 400:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 401:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1126, 1131); }
                  break;
               case 405:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1132, 1140); }
                  break;
               case 406:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1141, 1145); }
                  break;
               case 407:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1146, 1151); }
                  break;
               case 408:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1152, 1158); }
                  break;
               case 409:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1159, 1166); }
                  break;
               case 410:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(400, 411); }
                  break;
               case 411:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1167, 1172); }
                  break;
               case 413:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1173, 1181); }
                  break;
               case 414:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1182, 1186); }
                  break;
               case 415:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1187, 1192); }
                  break;
               case 416:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1193, 1199); }
                  break;
               case 417:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1200, 1207); }
                  break;
               case 418:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(386, 419); }
                  break;
               case 419:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1208, 1212); }
                  break;
               case 421:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1213, 1220); }
                  break;
               case 422:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1221, 1224); }
                  break;
               case 423:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1225, 1229); }
                  break;
               case 424:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1230, 1235); }
                  break;
               case 425:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1236, 1242); }
                  break;
               case 426:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1736, 1740); }
                  break;
               case 429:
               case 430:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 431:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(432, 433); }
                  break;
               case 432:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 433:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1243, 1247); }
                  break;
               case 437:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1248, 1255); }
                  break;
               case 438:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1256, 1259); }
                  break;
               case 439:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1260, 1264); }
                  break;
               case 440:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1265, 1270); }
                  break;
               case 441:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1271, 1277); }
                  break;
               case 442:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(432, 443); }
                  break;
               case 443:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1278, 1282); }
                  break;
               case 445:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1283, 1290); }
                  break;
               case 446:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1291, 1294); }
                  break;
               case 447:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1295, 1299); }
                  break;
               case 448:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1300, 1305); }
                  break;
               case 449:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddStates(1306, 1312); }
                  break;
               case 450:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 451:
                  if (curChar == 92)
                     { jjAddStates(1817, 1818); }
                  break;
               case 452:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 453:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1313, 1317); }
                  break;
               case 457:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1318, 1325); }
                  break;
               case 458:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1326, 1329); }
                  break;
               case 459:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1330, 1334); }
                  break;
               case 460:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1335, 1340); }
                  break;
               case 461:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddStates(1341, 1347); }
                  break;
               case 462:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1748, 1750); }
                  break;
               case 465:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 469:
                  { jjAddStates(1819, 1820); }
                  break;
               case 471:
               case 472:
                  { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 477:
                  if (curChar == 92)
                     { jjAddStates(1821, 1824); }
                  break;
               case 481:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1366, 1371); }
                  break;
               case 485:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1372, 1380); }
                  break;
               case 486:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1381, 1385); }
                  break;
               case 487:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1386, 1391); }
                  break;
               case 488:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1392, 1398); }
                  break;
               case 489:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1399, 1406); }
                  break;
               case 491:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 493:
                  if (curChar == 92)
                     { jjAddStates(1825, 1828); }
                  break;
               case 497:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 498:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1410, 1415); }
                  break;
               case 501:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1416, 1424); }
                  break;
               case 502:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1425, 1429); }
                  break;
               case 503:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1430, 1435); }
                  break;
               case 504:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1436, 1442); }
                  break;
               case 505:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1443, 1450); }
                  break;
               case 506:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 507:
                  if (curChar == 92)
                     { jjAddStates(1829, 1830); }
                  break;
               case 508:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1455, 1460); }
                  break;
               case 513:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1467, 1475); }
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1476, 1480); }
                  break;
               case 515:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1481, 1486); }
                  break;
               case 516:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1487, 1493); }
                  break;
               case 517:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1494, 1501); }
                  break;
               case 520:
                  { jjAddStates(1831, 1832); }
                  break;
               case 522:
               case 523:
                  { jjCheckNAddTwoStates(523, 524); }
                  break;
               case 527:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 528:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 527;
                  break;
               case 536:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjAddStates(1533, 1538); }
                  break;
               case 537:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 538;
                  break;
               case 538:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 539;
                  break;
               case 539:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 540;
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(541); }
                  break;
               case 541:
                  if ((0x7e0000007eL & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 544:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 545;
                  break;
               case 545:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 532;
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 548:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 550:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 551;
                  break;
               case 551:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 554:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 555;
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(564, 570); }
                  break;
               case 565:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 566:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1549, 1552); }
                  break;
               case 567:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAdd(541); }
                  break;
               case 568:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddTwoStates(541, 567); }
                  break;
               case 569:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 94)
                     kind = 94;
                  { jjCheckNAddStates(1553, 1555); }
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1556, 1560); }
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 572:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddTwoStates(571, 564); }
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1561, 1563); }
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1564, 1567); }
                  break;
               case 577:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 578:
               case 586:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(577); }
                  break;
               case 580:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 581:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 580;
                  break;
               case 583:
                  if ((0x10000000100L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 584:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 587:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 589:
                  if ((0x80000000800000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 590:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 592:
                  if ((0x10000000100L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 593:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 595:
                  if ((0x400000004000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 596:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 595;
                  break;
               case 597:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 598:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 597;
                  break;
               case 600:
                  if ((0x100000001000000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 601:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 602:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 601;
                  break;
               case 603:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 605:
                  if ((0x200000002000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 606:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(605); }
                  break;
               case 608:
                  if ((0x200000002000L & l) != 0L)
                     { jjCheckNAdd(605); }
                  break;
               case 610:
                  if ((0x2000000020000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 612:
                  if ((0x400000004000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 613:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 615:
                  if ((0x10000000100000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 616:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 618:
                  if ((0x800000008L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 619:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 621:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 622:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 624:
                  if ((0x8000000080L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 625:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 626:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 627:
                  if ((0x1000000010L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 628:
               case 631:
                  if ((0x200000002L & l) != 0L)
                     { jjCheckNAdd(627); }
                  break;
               case 629:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 628;
                  break;
               case 630:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 632:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 633:
                  if ((0x400000004000L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 634:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 633;
                  break;
               case 635:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 634;
                  break;
               case 636:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 638:
                  if ((0x400000004L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 639:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 641:
                  if ((0x10000000100000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 642:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 644:
               case 646:
                  if ((0x8000000080000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 645:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 648:
                  if ((0x400000004000000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 649:
               case 650:
                  if ((0x10000000100L & l) != 0L)
                     { jjCheckNAdd(648); }
                  break;
               case 651:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 650;
                  break;
               case 653:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(1833, 1835); }
                  break;
               case 654:
                  if ((0x20000000200L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 655:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 654;
                  break;
               case 656:
                  if ((0x200000002000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 657:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 656;
                  break;
               case 658:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 657;
                  break;
               case 659:
                  if ((0x100000001000000L & l) != 0L && kind > 63)
                     kind = 63;
                  break;
               case 660:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 659;
                  break;
               case 661:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 660;
                  break;
               case 663:
               case 664:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 665:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(666, 667); }
                  break;
               case 666:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 667:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1582, 1586); }
                  break;
               case 671:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1587, 1594); }
                  break;
               case 672:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1595, 1598); }
                  break;
               case 673:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1599, 1603); }
                  break;
               case 674:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1604, 1609); }
                  break;
               case 675:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1610, 1616); }
                  break;
               case 676:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(666, 677); }
                  break;
               case 677:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1617, 1621); }
                  break;
               case 679:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1622, 1629); }
                  break;
               case 680:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1630, 1633); }
                  break;
               case 681:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1634, 1638); }
                  break;
               case 682:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1639, 1644); }
                  break;
               case 683:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddStates(1645, 1651); }
                  break;
               case 688:
               case 689:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 690:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(691, 692); }
                  break;
               case 691:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 692:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1652, 1656); }
                  break;
               case 696:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1657, 1664); }
                  break;
               case 697:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1665, 1668); }
                  break;
               case 698:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1669, 1673); }
                  break;
               case 699:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1674, 1679); }
                  break;
               case 700:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1680, 1686); }
                  break;
               case 701:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(691, 702); }
                  break;
               case 702:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1687, 1691); }
                  break;
               case 704:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1692, 1699); }
                  break;
               case 705:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1700, 1703); }
                  break;
               case 706:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1704, 1708); }
                  break;
               case 707:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1709, 1714); }
                  break;
               case 708:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddStates(1715, 1721); }
                  break;
               case 709:
                  if (curChar == 92)
                     { jjCheckNAddStates(1741, 1744); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 7:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddStates(1736, 1740); }
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1751, 1752); }
                  break;
               case 3:
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 20:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 22:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 39)
                     kind = 39;
                  { jjCheckNAddTwoStates(20, 21); }
                  break;
               case 36:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1755, 1756); }
                  break;
               case 38:
               case 39:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(39, 40); }
                  break;
               case 54:
               case 55:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 57:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAddTwoStates(55, 56); }
                  break;
               case 79:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1761, 1762); }
                  break;
               case 81:
               case 82:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(82, 83); }
                  break;
               case 87:
               case 88:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 91:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1763, 1764); }
                  break;
               case 93:
               case 94:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(94, 95); }
                  break;
               case 99:
               case 100:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 103:
               case 104:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 107:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1765, 1766); }
                  break;
               case 109:
               case 110:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 116:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 135:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(331, 336); }
                  break;
               case 154:
               case 160:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(546, 548); }
                  break;
               case 170:
               case 176:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(595, 597); }
                  break;
               case 186:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(305, 310); }
                  break;
               case 214:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1783, 1784); }
                  break;
               case 216:
               case 217:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(217, 218); }
                  break;
               case 222:
               case 223:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 226:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1785, 1786); }
                  break;
               case 228:
               case 229:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(229, 230); }
                  break;
               case 235:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(769, 772); }
                  break;
               case 256:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1787, 1788); }
                  break;
               case 258:
               case 259:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(259, 260); }
                  break;
               case 265:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1789, 1790); }
                  break;
               case 267:
               case 268:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(268, 269); }
                  break;
               case 276:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1791, 1792); }
                  break;
               case 278:
               case 279:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(279, 280); }
                  break;
               case 285:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1793, 1794); }
                  break;
               case 287:
               case 288:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(288, 289); }
                  break;
               case 294:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1795, 1796); }
                  break;
               case 296:
               case 297:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(297, 298); }
                  break;
               case 303:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1797, 1798); }
                  break;
               case 305:
               case 306:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(306, 307); }
                  break;
               case 312:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1799, 1800); }
                  break;
               case 314:
               case 315:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(315, 316); }
                  break;
               case 323:
               case 329:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(930, 932); }
                  break;
               case 338:
               case 343:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(338, 339); }
                  break;
               case 353:
               case 359:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1009, 1011); }
                  break;
               case 368:
               case 373:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 35)
                     kind = 35;
                  { jjCheckNAddTwoStates(368, 369); }
                  break;
               case 383:
               case 384:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 386:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 36)
                     kind = 36;
                  { jjCheckNAddTwoStates(384, 385); }
                  break;
               case 396:
               case 397:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 400:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1123, 1125); }
                  break;
               case 429:
               case 430:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 432:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  { jjCheckNAddTwoStates(430, 431); }
                  break;
               case 450:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 452:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAddTwoStates(450, 451); }
                  break;
               case 465:
               case 481:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1354, 1356); }
                  break;
               case 469:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1819, 1820); }
                  break;
               case 471:
               case 472:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(472, 473); }
                  break;
               case 491:
               case 497:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1407, 1409); }
                  break;
               case 506:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 508:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1451, 1454); }
                  break;
               case 520:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjAddStates(1831, 1832); }
                  break;
               case 522:
               case 523:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddTwoStates(523, 524); }
                  break;
               case 663:
               case 664:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 666:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAddTwoStates(664, 665); }
                  break;
               case 688:
               case 689:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               case 691:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 95)
                     kind = 95;
                  { jjCheckNAddTwoStates(689, 690); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 || l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 783 - (jjnewStateCnt = startsAt)))
         break;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { break; }
   }
   if (jjmatchedPos > strPos)
      return curPos;

   int toRet = Math.max(curPos, seenUpto);

   if (curPos < toRet)
      for (i = toRet - Math.min(curPos, seenUpto); i-- > 0; )
         try { curChar = input_stream.readChar(); }
         catch(java.io.IOException e) { throw new Error("Internal Error : Please send a bug report."); }

   if (jjmatchedPos < strPos)
   {
      jjmatchedKind = strKind;
      jjmatchedPos = strPos;
   }
   else if (jjmatchedPos == strPos && jjmatchedKind > strKind)
      jjmatchedKind = strKind;

   return toRet;
}
static final int[] jjnextStates = {
   711, 712, 713, 578, 714, 715, 716, 581, 717, 718, 719, 584, 720, 721, 722, 587, 
   723, 724, 725, 590, 726, 727, 728, 593, 729, 730, 731, 598, 732, 733, 734, 603, 
   735, 736, 737, 606, 738, 739, 740, 608, 741, 742, 743, 610, 744, 745, 746, 613, 
   747, 748, 749, 616, 750, 751, 752, 619, 753, 754, 755, 622, 756, 757, 758, 626, 
   630, 632, 636, 759, 760, 761, 639, 762, 763, 764, 642, 765, 766, 767, 645, 646, 
   768, 769, 770, 649, 651, 771, 772, 773, 774, 775, 776, 663, 777, 778, 779, 685, 
   780, 781, 782, 676, 653, 262, 263, 271, 272, 273, 282, 283, 8, 291, 292, 9, 
   300, 301, 10, 309, 310, 11, 318, 319, 320, 576, 579, 582, 585, 588, 591, 594, 
   599, 604, 607, 609, 611, 614, 617, 620, 623, 637, 640, 643, 647, 652, 662, 684, 
   686, 687, 688, 701, 428, 429, 450, 451, 442, 383, 396, 410, 418, 353, 354, 368, 
   369, 355, 323, 324, 338, 339, 325, 210, 77, 86, 87, 196, 2, 3, 6, 3, 
   5, 6, 20, 25, 26, 21, 27, 20, 28, 25, 26, 21, 29, 30, 31, 20, 
   25, 26, 21, 20, 28, 25, 26, 21, 20, 28, 25, 26, 21, 29, 20, 28, 
   25, 26, 21, 29, 30, 42, 51, 34, 37, 38, 41, 38, 40, 41, 54, 67, 
   55, 60, 61, 56, 62, 55, 63, 60, 61, 56, 64, 65, 66, 55, 60, 61, 
   56, 55, 63, 60, 61, 56, 55, 63, 60, 61, 56, 64, 55, 63, 60, 61, 
   56, 64, 65, 69, 61, 55, 56, 70, 71, 69, 61, 55, 56, 72, 73, 74, 
   69, 61, 55, 56, 71, 69, 61, 55, 56, 71, 69, 61, 55, 56, 72, 71, 
   69, 61, 55, 56, 72, 73, 85, 86, 87, 196, 77, 80, 81, 84, 81, 83, 
   84, 88, 89, 98, 99, 114, 185, 97, 98, 99, 114, 115, 89, 92, 93, 96, 
   93, 95, 96, 100, 101, 117, 102, 103, 153, 169, 145, 98, 99, 104, 105, 114, 
   134, 98, 99, 113, 114, 115, 105, 108, 109, 112, 109, 111, 112, 100, 120, 121, 
   101, 117, 122, 100, 123, 120, 121, 101, 117, 124, 125, 126, 100, 120, 121, 101, 
   117, 100, 123, 120, 121, 101, 117, 100, 123, 120, 121, 101, 117, 124, 100, 123, 
   120, 121, 101, 117, 124, 125, 128, 121, 100, 101, 117, 129, 130, 128, 121, 100, 
   101, 117, 131, 132, 133, 128, 121, 100, 101, 117, 130, 128, 121, 100, 101, 117, 
   130, 128, 121, 100, 101, 117, 131, 130, 128, 121, 100, 101, 117, 131, 132, 98, 
   99, 104, 138, 114, 134, 139, 140, 98, 99, 104, 105, 113, 114, 115, 105, 134, 
   98, 99, 104, 141, 138, 114, 134, 139, 142, 143, 144, 98, 99, 104, 138, 114, 
   134, 139, 98, 99, 104, 141, 138, 114, 134, 139, 98, 99, 104, 141, 138, 114, 
   134, 139, 142, 98, 99, 104, 141, 138, 114, 134, 139, 142, 143, 98, 99, 147, 
   104, 114, 134, 139, 148, 98, 99, 149, 147, 104, 114, 134, 139, 150, 151, 152, 
   98, 99, 147, 104, 114, 134, 139, 98, 99, 149, 147, 104, 114, 134, 139, 98, 
   99, 149, 147, 104, 114, 134, 139, 150, 98, 99, 149, 147, 104, 114, 134, 139, 
   150, 151, 154, 155, 156, 98, 99, 105, 114, 115, 154, 162, 163, 155, 156, 164, 
   154, 165, 162, 163, 155, 156, 166, 167, 168, 154, 162, 163, 155, 156, 154, 165, 
   162, 163, 155, 156, 154, 165, 162, 163, 155, 156, 166, 154, 165, 162, 163, 155, 
   156, 166, 167, 170, 171, 172, 170, 178, 179, 171, 172, 180, 170, 181, 178, 179, 
   171, 172, 182, 183, 184, 170, 178, 179, 171, 172, 170, 181, 178, 179, 171, 172, 
   170, 181, 178, 179, 171, 172, 182, 170, 181, 178, 179, 171, 172, 182, 183, 88, 
   189, 98, 99, 114, 185, 190, 191, 88, 89, 97, 98, 99, 114, 115, 89, 185, 
   88, 192, 189, 98, 99, 114, 185, 190, 193, 194, 195, 88, 189, 98, 99, 114, 
   185, 190, 88, 192, 189, 98, 99, 114, 185, 190, 88, 192, 189, 98, 99, 114, 
   185, 190, 193, 88, 192, 189, 98, 99, 114, 185, 190, 193, 194, 198, 88, 98, 
   99, 114, 185, 190, 199, 200, 198, 88, 98, 99, 114, 185, 190, 201, 202, 203, 
   198, 88, 98, 99, 114, 185, 190, 200, 198, 88, 98, 99, 114, 185, 190, 200, 
   198, 88, 98, 99, 114, 185, 190, 201, 200, 198, 88, 98, 99, 114, 185, 190, 
   201, 202, 212, 221, 222, 245, 220, 221, 222, 245, 212, 215, 216, 219, 216, 218, 
   219, 223, 224, 233, 234, 232, 233, 224, 227, 228, 231, 228, 230, 231, 223, 238, 
   233, 234, 239, 240, 223, 224, 232, 233, 224, 234, 223, 241, 238, 233, 234, 239, 
   242, 243, 244, 223, 238, 233, 234, 239, 223, 241, 238, 233, 234, 239, 223, 241, 
   238, 233, 234, 239, 242, 223, 241, 238, 233, 234, 239, 242, 243, 247, 223, 233, 
   234, 239, 248, 249, 247, 223, 233, 234, 239, 250, 251, 252, 247, 223, 233, 234, 
   239, 249, 247, 223, 233, 234, 239, 249, 247, 223, 233, 234, 239, 250, 249, 247, 
   223, 233, 234, 239, 250, 251, 257, 258, 261, 258, 260, 261, 266, 267, 270, 267, 
   269, 270, 271, 272, 273, 277, 278, 281, 278, 280, 281, 282, 283, 8, 286, 287, 
   290, 287, 289, 290, 291, 292, 9, 295, 296, 299, 296, 298, 299, 300, 301, 10, 
   304, 305, 308, 305, 307, 308, 309, 310, 11, 313, 314, 317, 314, 316, 317, 318, 
   319, 320, 323, 324, 325, 323, 331, 332, 324, 325, 333, 323, 334, 331, 332, 324, 
   325, 335, 336, 337, 323, 331, 332, 324, 325, 323, 334, 331, 332, 324, 325, 323, 
   334, 331, 332, 324, 325, 335, 323, 334, 331, 332, 324, 325, 335, 336, 338, 345, 
   346, 339, 347, 338, 348, 345, 346, 339, 349, 350, 351, 338, 345, 346, 339, 338, 
   348, 345, 346, 339, 338, 348, 345, 346, 339, 349, 338, 348, 345, 346, 339, 349, 
   350, 353, 354, 355, 353, 361, 362, 354, 355, 363, 353, 364, 361, 362, 354, 355, 
   365, 366, 367, 353, 361, 362, 354, 355, 353, 364, 361, 362, 354, 355, 353, 364, 
   361, 362, 354, 355, 365, 353, 364, 361, 362, 354, 355, 365, 366, 368, 375, 376, 
   369, 377, 368, 378, 375, 376, 369, 379, 380, 381, 368, 375, 376, 369, 368, 378, 
   375, 376, 369, 368, 378, 375, 376, 369, 379, 368, 378, 375, 376, 369, 379, 380, 
   384, 389, 390, 385, 391, 384, 392, 389, 390, 385, 393, 394, 395, 384, 389, 390, 
   385, 384, 392, 389, 390, 385, 384, 392, 389, 390, 385, 393, 384, 392, 389, 390, 
   385, 393, 394, 397, 398, 399, 397, 403, 404, 398, 399, 405, 397, 406, 403, 404, 
   398, 399, 407, 408, 409, 397, 403, 404, 398, 399, 397, 406, 403, 404, 398, 399, 
   397, 406, 403, 404, 398, 399, 407, 397, 406, 403, 404, 398, 399, 407, 408, 412, 
   404, 397, 398, 399, 413, 414, 412, 404, 397, 398, 399, 415, 416, 417, 412, 404, 
   397, 398, 399, 414, 412, 404, 397, 398, 399, 414, 412, 404, 397, 398, 399, 415, 
   414, 412, 404, 397, 398, 399, 415, 416, 420, 390, 384, 385, 421, 422, 420, 390, 
   384, 385, 423, 424, 425, 420, 390, 384, 385, 422, 420, 390, 384, 385, 422, 420, 
   390, 384, 385, 423, 422, 420, 390, 384, 385, 423, 424, 430, 435, 436, 431, 437, 
   430, 438, 435, 436, 431, 439, 440, 441, 430, 435, 436, 431, 430, 438, 435, 436, 
   431, 430, 438, 435, 436, 431, 439, 430, 438, 435, 436, 431, 439, 440, 444, 436, 
   430, 431, 445, 446, 444, 436, 430, 431, 447, 448, 449, 444, 436, 430, 431, 446, 
   444, 436, 430, 431, 446, 444, 436, 430, 431, 447, 446, 444, 436, 430, 431, 447, 
   448, 450, 455, 456, 451, 457, 450, 458, 455, 456, 451, 459, 460, 461, 450, 455, 
   456, 451, 450, 458, 455, 456, 451, 450, 458, 455, 456, 451, 459, 450, 458, 455, 
   456, 451, 459, 460, 464, 490, 506, 476, 507, 518, 465, 466, 477, 475, 476, 467, 
   470, 471, 474, 471, 473, 474, 465, 483, 484, 466, 477, 485, 465, 486, 483, 484, 
   466, 477, 487, 488, 489, 465, 483, 484, 466, 477, 465, 486, 483, 484, 466, 477, 
   465, 486, 483, 484, 466, 477, 487, 465, 486, 483, 484, 466, 477, 487, 488, 491, 
   492, 493, 491, 499, 500, 492, 493, 501, 491, 502, 499, 500, 492, 493, 503, 504, 
   505, 491, 499, 500, 492, 493, 491, 502, 499, 500, 492, 493, 491, 502, 499, 500, 
   492, 493, 503, 491, 502, 499, 500, 492, 493, 503, 504, 506, 467, 476, 507, 506, 
   511, 476, 507, 512, 513, 506, 467, 475, 476, 467, 507, 506, 514, 511, 476, 507, 
   512, 515, 516, 517, 506, 511, 476, 507, 512, 506, 514, 511, 476, 507, 512, 506, 
   514, 511, 476, 507, 512, 515, 506, 514, 511, 476, 507, 512, 515, 516, 526, 464, 
   490, 506, 475, 476, 467, 507, 518, 521, 522, 525, 522, 524, 525, 526, 464, 490, 
   506, 476, 507, 518, 530, 536, 532, 533, 534, 535, 532, 533, 534, 537, 542, 546, 
   550, 554, 558, 532, 556, 557, 532, 559, 560, 561, 532, 559, 560, 541, 567, 568, 
   569, 541, 567, 568, 571, 564, 572, 573, 574, 571, 564, 572, 571, 564, 572, 573, 
   623, 626, 630, 632, 636, 643, 645, 646, 647, 649, 651, 662, 663, 676, 664, 669, 
   670, 665, 671, 664, 672, 669, 670, 665, 673, 674, 675, 664, 669, 670, 665, 664, 
   672, 669, 670, 665, 664, 672, 669, 670, 665, 673, 664, 672, 669, 670, 665, 673, 
   674, 678, 670, 664, 665, 679, 680, 678, 670, 664, 665, 681, 682, 683, 678, 670, 
   664, 665, 680, 678, 670, 664, 665, 680, 678, 670, 664, 665, 681, 680, 678, 670, 
   664, 665, 681, 682, 689, 694, 695, 690, 696, 689, 697, 694, 695, 690, 698, 699, 
   700, 689, 694, 695, 690, 689, 697, 694, 695, 690, 689, 697, 694, 695, 690, 698, 
   689, 697, 694, 695, 690, 698, 699, 703, 695, 689, 690, 704, 705, 703, 695, 689, 
   690, 706, 707, 708, 703, 695, 689, 690, 705, 703, 695, 689, 690, 705, 703, 695, 
   689, 690, 706, 705, 703, 695, 689, 690, 706, 707, 756, 626, 630, 632, 636, 765, 
   645, 646, 768, 649, 651, 774, 663, 676, 384, 397, 398, 399, 385, 386, 419, 400, 
   411, 53, 54, 67, 528, 529, 562, 1, 2, 22, 23, 36, 37, 77, 86, 87, 
   196, 79, 80, 91, 92, 107, 108, 116, 127, 135, 136, 157, 159, 160, 161, 173, 
   175, 176, 177, 186, 187, 116, 127, 214, 215, 226, 227, 256, 257, 265, 266, 276, 
   277, 285, 286, 294, 295, 303, 304, 312, 313, 326, 328, 329, 330, 340, 342, 343, 
   344, 356, 358, 359, 360, 370, 372, 373, 374, 452, 453, 469, 470, 478, 480, 481, 
   482, 494, 496, 497, 498, 508, 509, 520, 521, 655, 658, 661, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, "\74\41\55\55", "\55\55\76", 
null, "\174\75", null, null, "\55", null, null, null, null, null, null, null, null, 
null, null, null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\73", "\57", 
"\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, "\72\72", null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\174", "\45", };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         matchedToken.specialToken = specialToken;
         return matchedToken;
      }
      else
      {
         if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
         {
            matchedToken = jjFillToken();
            if (specialToken == null)
               specialToken = matchedToken;
            else
            {
               matchedToken.specialToken = specialToken;
               specialToken = (specialToken.next = matchedToken);
            }
         }
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public CssParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public CssParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 783; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffe00001L, 0x1ffc01fffffL, 
};
static final long[] jjtoSkip = {
   0x2L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x2L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[783];
    private final int[] jjstateSet = new int[2 * 783];

    
    protected char curChar;
}
